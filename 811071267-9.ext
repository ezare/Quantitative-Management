#Objective function: 
  
# MAx Z. = 5X12 + 3X13 + 3X35 + 2X25 + 4X24 + 4X47 + 1X46 + 2X58 + 6X57 + 5X69 + 4X79 + 7X89
  
# Constraint:
  
#  X12 + X13 = 1
#  For intermediate nodes,
#  Arc in = arc out
#  For node 2: X12 – X25 - X24   = 0  
#  For node 3: X13 – X35 = 0
#  For node 4: X24 – X46 – X47 = 0
#  For node 5: X25 + X35 - X57 - X58 = 0
#  For node 6: X46 – X69 = 0
#  For node 7: X57 + X47 – X79 = 0
#  For node 8: X58 – X89 = 0
#  For destination node:
#    Arc in = 1
#  For node 9, X69 + X79 + X89 = 1



library(lpSolveAPI)

## create IP object

z <- make.lp(9, 13) 

colnames <- c("x12", "x13", "x35", "x25", "x24", "x47", "x46", "x58", "x57", "x69", "x79", "x89")
rownames <- c("node1", "node2", "node3", "node4", "node5", "node6", "node7", "node8","node9")


## obj function
set.objfn(z, c(5, 3, 3, 2, 4, 4, 1, 2, 6, 5, 4, 7)
lp.control(z, sense='min')


## set constraints LHS
set.row(z, 1, c(1,1), indices= c(1,2))      
set.row(z, 2, c(1,-1,-1), indices= c(1,4,5))     
set.row(z, 3, c(1,-1), indices= c(2,3)) 
set.row(z, 4, c(1,-1,-1), indices= c(5,6,7))
set.row(z, 5, c(1,1,-1,-1), indices= c(3,4,8,9))    
set.row(z, 6, c(1,-1), indices= c(7,10))      
set.row(z, 7, c(1,1,-1), indices= c(6,9,11)) 
set.row(z, 8, c(1,-1), indices= c(8,12)) 
set.row(z, 9, c(1,1,1), indices= c(10,11,12)) 

## set constraints type
set.constr.type(z, rep("="), 9)
 

## set constraint RHS
rhs <- c(1, rep(0, 7), 1)
set.rhs(z, rhs)

## set all variables type to be binary
set.type(z, 1:12, "binary")


solve(z)

get.objective(z)

get.variables(z)

cbind(colnames, get.variables(z))

